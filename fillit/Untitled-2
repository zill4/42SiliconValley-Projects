
int     checkMap(char map[17][17], t_block block, int mapSize, int l, t_point *lastPlace)
{
    int ox;
    int oy;
    int x;
    int y;
    int i;
    x = 0;
    y = 0;
    ox = block.ox;
    oy = block.oy;
    while (y < mapSize)
    {
        while (x < mapSize)
        {
            i = 0;
            while ((map[y + block.point[i].y + oy][x + block.point[i].x + ox] == '.')&&
                    y + block.point[i].y + oy <= mapSize && x + block.point[i].x + ox <= mapSize)
                i++;
            if (i == 4)
            {
                lastPlace->x = x + block.point[0].x + ox;
                lastPlace->y = y + block.point[0].y + oy;
                i = 0;
                while (i++ < 4)
                    map[y + block.point[i].y + oy][x + block.point[i].x + ox] = 'A' + l;
                l++;
                return (1);
            }
            x++;
        }
        x = 0;
        y++;
    }
    return (0);
}
int     checker(char map[17][17], t_block block, int mapSize, t_point *lastPlace, int l)
{
    int x;
    int y;
    x = 0;
    y = 0;
    while (y < mapSize)
    {
        while (x < mapSize)
        {
            i = 0;
            while ((map[y + block.point[i].y][x + block.point[i].x] == lett[l])&&
                    y + block.point[i].y <= mapSize && x + block.point[i].x <= mapSize)
                i++;
            if (i == 4)
            {
                lastPlace->x = x + block.point[0].x;
                lastPlace->y = y + block.point[0].y;
                i = 0;
                while (i++ < 4)
                    map[y + block.point[i].y][x + block.point[i].x] = '.';
                return (1);
            }
            x++;
        }
        x = 0;
        y++;
    }
    return (0);
}
